openapi: 3.0.0
x-navigateMethodsByName: true
info:
  version: 0.1.0
  title: Robot Learning Lab API
servers: 
  - url: https://rll-api.ipr.kit.edu
tags:
- name: jobs
  description: Management of Jobs
- name: system
  description: Retrieve system information
paths:
  /jobs:
    get:
      tags:
      - jobs
      summary: Get status of job or data for job
      description: ''
      operationId: getJobs
      parameters:
      - in: query
        name: op
        description: What operation should be performed, either retrieving status information about job or fetching data of a finished job
        required: true
        schema:
          type: string
          enum:
          - status
          - data_urls
      - in: query
        name: job
        description: Job Id to perform operation on
        required: true
        schema:
          type: string
        example: 5b391e2af7971f5ba880525b
      responses:
        '200':
          description: Response of the call
          content:
            application/json:
              schema:
                type: object
                oneOf:
                  - $ref: '#/components/schemas/JobStatusSuccess'
                  - $ref: '#/components/schemas/JobDataSuccess'
                  - $ref: '#/components/schemas/JobDataError'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    post:
      tags:
      - jobs
      summary: Submit a job
      description: Central submission of jobs using a single secret. It would also be possible to support OpenID and OAuth to directly authenticate users.
      operationId: submitJob
      parameters:
      - in: query 
        name: op
        description: Operation to perform, either submitting a Git repo URL with a Git tag or a Tar archive with the code
        required: true
        schema:
          type: string
          enum:
          - submit_git
          - submit_tar
      - in: query
        name: username
        description: Author of the submitted code
        required: true
        schema:
          type: string
      - in: query
        name: secret
        description: Password for submission access
        required: true
        schema:
          type: string
          format: password
      - in: query
        name: project
        description: Name of the project the submission is for
        required: true
        schema:
          type: string
          enum:
          - rll_planning_project
      - in: query
        name: git_url
        description: Url to git repository
        schema:
          type: string
      - in: query
        name: git_tag
        description: Tag to checkout in the submitted Git repo
        schema:
          type: string
      - in: query
        name: tar_url
        description: URL to Tar archive with code
        schema:
          type: string
      responses:
        '200':
          description: Response for submission
          content:
            application/json:
              schema:
                type: object
                oneOf:
                - $ref: '#/components/schemas/JobSubmissionSuccess'
                - $ref: '#/components/schemas/JobSubmissionError'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
  /system/state:
    get:
      tags:
      - system
      summary: Get general information about the lab
      description: ''
      parameters:
      - in: query
        name: op
        description: What operation should be performed
        required: true
        schema:
          type: string
          enum:
          - status
      responses:
        '200':
          description: Response for system state query
          content:
            application/json:
              schema:
                type: string
                enum:
                - online
                - offline
                - down for maintenance
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /system/job_stats:
    get:
      tags:
      - system
      summary: Get status of job or data for job
      description: ''
      operationId: getJobs
      parameters:
      - in: query
        name: job_info_type
        description: What operation should be performed, either retrieving status information about job or fetching data of a finished job
        required: true
        schema:
          type: string
          enum:
          - status
          - result
      - in: query
        name: project
        description: Project for which job stats should be generated
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Response of the call
          content:
            application/json:
              schema:
                  type: object
                  oneOf:
                  - $ref: '#/components/schemas/JobStatusStatsSuccess'
                  - $ref: '#/components/schemas/JobResultStatsSuccess'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
        
components:
  schemas:
    JobStatusSuccess:
      title: Successful job status query
      required:
      - status
      - job_status
      properties:
        status:
          type: string
          description: Status of query
          enum:
          - success
        job_status:
          type: string
          description: Status of job
          enum:
          - submitted
          - processing sim started
          - processing real started
          - downloading code
          - building
          - running sim
          - waiting for real
          - running real
          - finished
        job_result:
          type: string
          description: Result if the job has finished
          enum:
          - success sim
          - success real
          - failure sim
          - failure real
          - internal error
          - unknown
          - fetching project code failed
          - launching project failed
          - building project failed
        job_data:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: duration
              value:
                type: number
        position:
          type: integer
          description: Position in queue if status is submitted or waiting
        cam_url:
          type: string
          description: URL to live stream of running job on robot
    JobDataSuccess:
      title: Successfull query for job data
      required:
      - status
      - build_log_url
      properties:
        status:
          type: string
          description: Status of query
          enum:
          - success
        build_log_url:
          type: string
          description: URL to build log file
        video_url:
          type: string
          description: URL to video file of job
        sim_run_client_log_url:
          type: string
          description: URL to client log file for simulation run
        sim_run_iface_log_url:
          type: string
          description: URL to interface log file for simulation run
        real_run_client_log_url:
          type: string
          description: URL to client log file for the run on the real robot
        real_run_iface_log_url:
          type: string
          description: URL to interface log file for the run on the real robot
    JobDataError:
      title: Failed query for job data
      required:
      - status
      - error
      properties:
        status:
          type: string
          description: Status of query
          enum:
          - error
        error:
          type: string
          description: Error message
          enum:
          - No finished job with this ID
    JobSubmissionSuccess:
      title: Successful submission
      required:
      - status
      - job_id
      properties:
        status:
          type: string
          description: Status of submission
          enum:
          - success
        job_id:
          type: string
          description: Job id of submitted job
          example: 5ab955b109b90e5707d2ccbe
    JobSubmissionError:
      title: Failed submission
      required:
      - status
      - error
      properties:
        status:
          type: string
          description: Status of submission
          enum:
          - error
        error:
          type: string
          description: Error message
          enum:
          - User has a job in the queue
          - Git tag not found
          - Git URL invalid
          - Username invalid
          - Queue at max size
    JobStatusStatsSuccess:
      title: Successful response for status of job_stats request
      properties:
        total:
          type: integer
          description: Total number of jobs
        submitted:
          type: integer
          description: Number of jobs in state submitted
        processing sim started:
          type: integer
          description: Number of jobs in state processing sim started
        processing real started:
          type: integer
          description: Number of jobs in state processing real started
        downloading code:
          type: integer
          description: Number of jobs in state downloading code
        building:
          type: integer
          description: Number of jobs in state building
        running sim:
          type: integer
          description: Number of jobs in state running sim
        waiting for real:
          type: integer
          description: Number of jobs in state waiting for real
        running real:
          type: integer
          description: Number of jobs in state running real
        finished:
          type: integer
          description: Number of jobs in state finished
      required:
      - total
      - submitted
      - processing sim started
      - processing real started
      - downloading code
      - building
      - running sim
      - waiting for real
      - running real
      - finished
    JobResultStatsSuccess:
      title: Successful response for results of job_stats request
      required:
      - total
      - sim success
      - real success
      - real failure
      - sim failure
      - sim internal error
      - real internal error
      - unknown
      - fetching project code failed
      - launching project failed
      - building project failed
      - total real
      properties:
        total:
          type: integer
          description: Total number of jobs
        sim success:
          type: integer
          description: Number of jobs with result sim success
        real success:
          type: integer
          description: Number of jobs with result real success
        real failure:
          type: integer
          description: Number of jobs with result real failure
        sim failure:
          type: integer
          description: Number of jobs with result sim failure
        sim internal error:
          type: integer
          description: Number of jobs with result sim internal error
        real internal error:
          type: integer
          description: Number of jobs with result real internal error
        unknown:
          type: integer
          description: Number of jobs with result unknown
        fetching project code failed:
          type: integer
          description: Number of jobs with result fetching project code failed
        launching project failed:
          type: integer
          description: Number of jobs with result launching project failed
        building project failed:
          type: integer
          description: Number of jobs with result building project failed
        total real:
          type: integer
          description: Number of jobs that did run on the real robots
  examples:
    JobResultStatsSuccess:
      description: Example response of JobResultStats
      summary: Example how response of JobResultStats looks like
      value: {"sim internal error": 0, "launching project failed": 0, "real failure": 0, "real success": 0, "sim success": 11, "total real": 0, "sim failure": 1, "building project failed": 1, "fetching project code failed": 0, "unknown": 0, "total": 13, "real internal error": 0}
    JobStatusStatsSuccess:
      description: Example response of JobStatusStats
      summary: Example how response of JobStatusStats looks like
      value: {"running real": 0, "submitted": 0, "running sim": 0, "processing sim started": 0, "finished": 2, "processing real started": 0, "total": 13, "waiting for real": 11, "downloading code": 0}
